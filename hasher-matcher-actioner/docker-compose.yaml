version: "3"

x-postgres-variables: &postgres-variables
  POSTGRES_USER: media_match
  # TODO: Use a secret instead.
  POSTGRES_PASSWORD: hunter2
  POSTGRESS_HOST: db
  POSTGRESS_DBNAME: media_match

services:
  app:
    build: .
    command: flask --app OpenMediaMatch.app --debug run --host=0.0.0.0 --port=8080
    #command: ["gunicorn", "--bind", "0.0.0.0:8080", "OpenMediaMatch.app:create_app()", "--log-level", "debug", "-w", "4"]
    restart: unless-stopped
    ports:
      - 8080:8080
    environment:
      ENV_CONFIG: "true"
      PRODUCTION: "false"
      ROLE_HASHER: "true"
      ROLE_MATCHER: "true"
      ROLE_CURATOR: "true"
      TASK_INDEXER: "true"
      <<: *postgres-variables
    volumes:
      - ./src:/build
    networks:
      - backend
    depends_on:
      - db

  db:
    image: postgres:latest
    restart: unless-stopped
    volumes:
        - ./.devcontainer/pg-scripts/init-multiple-pg-dbs.sh:/docker-entrypoint-initdb.d/init-multiple-pg-dbs.sh
        - postgres-data:/var/lib/postgresql/data
    environment:
      <<: *postgres-variables
      POSTGRES_MULTIPLE_DATABASES: media_match
    networks:
      - backend

volumes:
  postgres-data:

networks:
  backend:
    driver: bridge
